/// <reference types="@rbxts/types" />
import { StaticArguments } from "./internal";
/**
 * A function on the server
 * @rbxts server
 */
export default class NetServerFunction<C extends Array<any> = Array<unknown>> {
    protected propTypes: C | undefined;
    constructor(name: string, ...recievedPropTypes: C);
    /**
     * Creates a RemoteFunction that's not managed by Net.
     *
     * Note: Any features like throttling, caching, type checking etc. will have to be handled by you.
     *
     * @param name The name
     */
    static Unmanaged(name: string): RemoteFunction;
    /**
     * The callback function
     */
    GetCallback(): Callback;
    /**
     * Set the callback function when called by the client
     */
    SetCallback<R extends unknown>(func: (player: Player, ...args: StaticArguments<C>) => R): this;
    /**
     * The RemoteFunction instance
     */
    GetInstance(): RemoteFunction;
    /**
     * The client cache in seconds
     */
    GetClientCache(): number;
    /**
     * Sets a client cache timer in seconds
     * @param time seconds to cache on client
     */
    SetClientCache(time: number): this;
}
