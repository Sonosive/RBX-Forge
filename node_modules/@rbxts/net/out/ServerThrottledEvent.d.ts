/// <reference types="@rbxts/types" />
import NetServerEvent from "./ServerEvent";
import { StaticArguments } from "./internal";
/**
 * A server event that can be rate limited
 * @rbxts server
 */
export default class NetServerThrottledEvent<C extends Array<any> = Array<unknown>> extends NetServerEvent<C> {
    private maxRequestsPerMinute;
    private clientRequests;
    constructor(name: string, rateLimit: number, ...recievedPropTypes: C);
    /**
     * Connect a fucntion to fire when the event is invoked by the client
     * @param callback The function fired when the event is invoked by the client
     */
    Connect(callback: (sourcePlayer: Player, ...args: StaticArguments<C>) => void): RBXScriptConnection;
    /**
     * The number of requests allowed per minute per user
     */
    SetRateLimit(requestsPerMinute: number): void;
    GetRateLimit(): number;
}
